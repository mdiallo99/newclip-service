{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdiallo\\\\Desktop\\\\newclip-service\\\\webapp\\\\src\\\\App.js\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/home/Home\";\nimport Profile from \"./components/user/Profile\";\nimport Keycloak from \"keycloak-js\";\nimport { config } from \"./constants/Constants\";\nimport { APP_API } from \"./components/helpers/AppRequests\";\nimport { Dimmer, Header, Icon } from \"semantic-ui-react\";\nimport { ReactKeycloakProvider } from \"@react-keycloak/web\";\nimport LocalNavbar from \"./components/helpers/LocalNavbar\";\nimport PrivateRoute from \"./components/helpers/PrivateRoute\";\nimport UserList from \"./components/user/UserList\";\nimport CompanyList from \"./components/company/CompanyList\";\nimport AddressList from \"./components/address/AddressList\";\nimport AddAddress from \"./components/address/AddAddress\";\nimport AddCompany from \"./components/company/AddCompany\";\nimport AddUser from \"./components/user/AddUser\";\nimport KitContent from \"./components/home/KitContent\";\nimport { Redirect } from \"react-router\";\n/**\r\n * The user token. it's used in several pages\r\n * @type {null}\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet userToken = null;\n/**\r\n * Keycloak instance. it's used in several pages for user credential management\r\n * @type {null}\r\n */\n\nlet keycloak = null;\n\nfunction App() {\n  /**\r\n   * Keycloak instance\r\n   * @type {Keycloak.KeycloakInstance}\r\n   */\n  keycloak = new Keycloak({\n    url: `${config.url.KEYCLOAK_BASE_URL}/auth`,\n    realm: \"newclip-services\",\n    clientId: \"authentication-app\"\n  });\n  /**\r\n   * Encoding\r\n   * @type {{pkceMethod: string}}\r\n   */\n\n  const initOptions = {\n    pkceMethod: 'S256'\n  };\n\n  const eventLogger = (event, error) => {\n    console.log('onKeycloakEvent', event, error);\n  };\n  /**\r\n   *  Checks if a user logged or not\r\n   * @param event\r\n   * @returns {Promise<void>}\r\n   */\n\n\n  const handleOnEvent = async event => {\n    if (event === 'onAuthSuccess') {\n      if (keycloak.authenticated) {\n        console.log(\"Token: \", keycloak.token);\n        userToken = keycloak.token;\n        let response = await APP_API.getUserMe(keycloak.token);\n\n        if (response.status === 404) {\n          response = await APP_API.saveUserMe(keycloak.token);\n          console.log('Profile created !');\n        }\n      }\n    } else {\n      console.log(\"onError for authentication !\");\n    }\n  };\n\n  const loadingComponent = /*#__PURE__*/_jsxDEV(Dimmer, {\n    inverted: true,\n    active: true,\n    page: true,\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      style: {\n        color: '#4d4d4d'\n      },\n      as: \"h2\",\n      icon: true,\n      inverted: true,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        loading: true,\n        name: \"cog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n        children: [\" App loading\", /*#__PURE__*/_jsxDEV(Header.Subheader, {\n          style: {\n            color: '#4d4d4d'\n          },\n          children: \" or running authorization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 31\n  }, this);\n\n  let activeMenu = null;\n\n  const setActiveMenu = newMenu => {\n    activeMenu = newMenu;\n  };\n\n  return /*#__PURE__*/_jsxDEV(ReactKeycloakProvider, {\n    authClient: keycloak,\n    initOptions: initOptions,\n    LoadingComponent: loadingComponent,\n    onEvent: (event, error) => handleOnEvent(event, error),\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(LocalNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/home\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/kitContent\",\n            component: KitContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/profile\",\n            component: Profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/userList\",\n            component: UserList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/companyList\",\n            component: CompanyList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/addressList\",\n            component: AddressList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/addAddress\",\n            component: AddAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/addCompany\",\n            component: AddCompany\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/addUser\",\n            component: AddUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\nexport { App, userToken, keycloak };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mdiallo/Desktop/newclip-service/webapp/src/App.js"],"names":["BrowserRouter","Router","Route","Switch","Home","Profile","Keycloak","config","APP_API","Dimmer","Header","Icon","ReactKeycloakProvider","LocalNavbar","PrivateRoute","UserList","CompanyList","AddressList","AddAddress","AddCompany","AddUser","KitContent","Redirect","userToken","keycloak","App","url","KEYCLOAK_BASE_URL","realm","clientId","initOptions","pkceMethod","eventLogger","event","error","console","log","handleOnEvent","authenticated","token","response","getUserMe","status","saveUserMe","loadingComponent","color","activeMenu","setActiveMenu","newMenu"],"mappings":"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","sourcesContent":["import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Home from \"./components/home/Home\";\r\nimport Profile from \"./components/user/Profile\";\r\nimport Keycloak from \"keycloak-js\";\r\nimport {config} from \"./constants/Constants\";\r\nimport {APP_API} from \"./components/helpers/AppRequests\";\r\nimport {Dimmer, Header, Icon} from \"semantic-ui-react\";\r\nimport {ReactKeycloakProvider} from \"@react-keycloak/web\";\r\nimport LocalNavbar from \"./components/helpers/LocalNavbar\";\r\nimport PrivateRoute from \"./components/helpers/PrivateRoute\";\r\nimport UserList from \"./components/user/UserList\";\r\nimport CompanyList from \"./components/company/CompanyList\";\r\nimport AddressList from \"./components/address/AddressList\";\r\nimport AddAddress from \"./components/address/AddAddress\";\r\nimport AddCompany from \"./components/company/AddCompany\";\r\nimport AddUser from \"./components/user/AddUser\";\r\nimport KitContent from \"./components/home/KitContent\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n/**\r\n * The user token. it's used in several pages\r\n * @type {null}\r\n */\r\nlet userToken = null;\r\n/**\r\n * Keycloak instance. it's used in several pages for user credential management\r\n * @type {null}\r\n */\r\nlet keycloak = null;\r\n\r\nfunction App() {\r\n    /**\r\n     * Keycloak instance\r\n     * @type {Keycloak.KeycloakInstance}\r\n     */\r\n    keycloak = new Keycloak({\r\n        url: `${config.url.KEYCLOAK_BASE_URL}/auth`,\r\n        realm: \"newclip-services\",\r\n        clientId: \"authentication-app\"\r\n    })\r\n    /**\r\n     * Encoding\r\n     * @type {{pkceMethod: string}}\r\n     */\r\n    const initOptions = {pkceMethod: 'S256'}\r\n    const eventLogger = (event, error) => {\r\n        console.log('onKeycloakEvent', event, error)\r\n    }\r\n\r\n    /**\r\n     *  Checks if a user logged or not\r\n     * @param event\r\n     * @returns {Promise<void>}\r\n     */\r\n    const handleOnEvent = async (event) => {\r\n        if (event === 'onAuthSuccess') {\r\n            if (keycloak.authenticated) {\r\n                console.log(\"Token: \", keycloak.token);\r\n                userToken = keycloak.token;\r\n                let response = await APP_API.getUserMe(keycloak.token)\r\n                if (response.status === 404) {\r\n                    response = await APP_API.saveUserMe(keycloak.token)\r\n                    console.log('Profile created !')\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"onError for authentication !\")\r\n        }\r\n    }\r\n\r\n    const loadingComponent = (<Dimmer inverted active={true} page>\r\n            <Header style={{color: '#4d4d4d'}} as='h2' icon inverted>\r\n                <Icon loading name='cog'/>\r\n                <Header.Content> App loading\r\n                    <Header.Subheader style={{color: '#4d4d4d'}}> or running authorization</Header.Subheader>\r\n                </Header.Content>\r\n            </Header>\r\n        </Dimmer>\r\n    )\r\n\r\n    let activeMenu = null;\r\n    const setActiveMenu = (newMenu) => {\r\n        activeMenu = newMenu;\r\n    }\r\n\r\n    return (\r\n        <ReactKeycloakProvider\r\n            authClient={keycloak}\r\n            initOptions={initOptions}\r\n            LoadingComponent={loadingComponent}\r\n            onEvent={(event, error) => handleOnEvent(event, error)}\r\n        >\r\n            <Router>\r\n                <LocalNavbar/>\r\n                <section>\r\n                    <Switch>\r\n                        <PrivateRoute path='/home' component={Home}/>\r\n                        <PrivateRoute path='/kitContent' component={KitContent}/>\r\n                        <PrivateRoute path='/profile' component={Profile}/>\r\n                        <PrivateRoute path='/userList' component={UserList}/>\r\n                        <PrivateRoute path='/companyList' component={CompanyList}/>\r\n                        <PrivateRoute path='/addressList' component={AddressList}/>\r\n                        <PrivateRoute path='/addAddress' component={AddAddress}/>\r\n                        <PrivateRoute path='/addCompany' component={AddCompany}/>\r\n                        <PrivateRoute path='/addUser' component={AddUser}/>\r\n                        <Redirect to=\"/profile\"/>\r\n                    </Switch>\r\n                </section>\r\n                <footer></footer>\r\n            </Router>\r\n        </ReactKeycloakProvider>\r\n    );\r\n}\r\n\r\nexport {App, userToken, keycloak};"]},"metadata":{},"sourceType":"module"}