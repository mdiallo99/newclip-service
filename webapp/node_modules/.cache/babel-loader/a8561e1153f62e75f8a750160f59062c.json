{"ast":null,"code":"import { keycloak } from \"../../App\";\nimport { KEYCLOAK_CONFIG } from \"../../constants/Constants\";\n/**\r\n * Checks if the authenticated user is admin\r\n * @param keycloak Keycloak instance\r\n * @returns {boolean}\r\n */\n\nconst isAdmin = keycloak => {\n  return keycloak && keycloak.tokenParsed && keycloak.tokenParsed.resource_access[KEYCLOAK_CONFIG.CLIENT_ID].roles.includes(KEYCLOAK_CONFIG.ADMIN);\n};\n\nconst isUser = keycloak => {\n  return keycloak && keycloak.tokenParsed && keycloak.tokenParsed.resource_access[KEYCLOAK_CONFIG.CLIENT_ID].roles.includes(KEYCLOAK_CONFIG.USER);\n};\n\nconst getUserEmail = () => {\n  return keycloak.authenticated && keycloak.tokenParsed && keycloak.tokenParsed.preferred_username;\n};\n\nconst handleLogError = error => {\n  switch (error) {\n    case error.response:\n      console.log(\"Error Response: \" + error.response.data);\n      break;\n\n    case error.request:\n      console.log(\"Error Request: \" + error.request.data);\n      break;\n\n    default:\n      console.log(\"Error Message: \" + error.message);\n  }\n};\n\nexport const helpers = {\n  isAdmin,\n  isUser,\n  handleLogError,\n  getUserEmail\n};","map":{"version":3,"sources":["C:/Users/mdiallo/Desktop/newclip-service/webapp/src/components/helpers/Helpers.js"],"names":["keycloak","KEYCLOAK_CONFIG","isAdmin","tokenParsed","resource_access","CLIENT_ID","roles","includes","ADMIN","isUser","USER","getUserEmail","authenticated","preferred_username","handleLogError","error","response","console","log","data","request","message","helpers"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,WAAvB;AACA,SAAQC,eAAR,QAA8B,2BAA9B;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAIF,QAAD,IAAc;AAC1B,SAAOA,QAAQ,IAAIA,QAAQ,CAACG,WAArB,IAAoCH,QAAQ,CAACG,WAAT,CAAqBC,eAArB,CAAqCH,eAAe,CAACI,SAArD,EAAgEC,KAAhE,CAAsEC,QAAtE,CAA+EN,eAAe,CAACO,KAA/F,CAA3C;AACH,CAFD;;AAIA,MAAMC,MAAM,GAAIT,QAAD,IAAc;AACzB,SAAOA,QAAQ,IAAIA,QAAQ,CAACG,WAArB,IAAoCH,QAAQ,CAACG,WAAT,CAAqBC,eAArB,CAAqCH,eAAe,CAACI,SAArD,EAAgEC,KAAhE,CAAsEC,QAAtE,CAA+EN,eAAe,CAACS,IAA/F,CAA3C;AACH,CAFD;;AAIA,MAAMC,YAAY,GAAG,MAAM;AACvB,SAAOX,QAAQ,CAACY,aAAT,IAA0BZ,QAAQ,CAACG,WAAnC,IAAkDH,QAAQ,CAACG,WAAT,CAAqBU,kBAA9E;AACH,CAFD;;AAIA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAE9B,UAAQA,KAAR;AACI,SAAKA,KAAK,CAACC,QAAX;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAmBH,KAAK,CAACC,QAAN,CAAeG,IAA9C;AACA;;AACJ,SAAKJ,KAAK,CAACK,OAAX;AACIH,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkBH,KAAK,CAACK,OAAN,CAAcD,IAA5C;AACA;;AACJ;AACIF,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkBH,KAAK,CAACM,OAApC;AARR;AAUH,CAZD;;AAcA,OAAO,MAAMC,OAAO,GAAG;AACnBpB,EAAAA,OADmB;AAEnBO,EAAAA,MAFmB;AAGnBK,EAAAA,cAHmB;AAInBH,EAAAA;AAJmB,CAAhB","sourcesContent":["import {keycloak} from \"../../App\";\r\nimport {KEYCLOAK_CONFIG} from \"../../constants/Constants\";\r\n\r\n/**\r\n * Checks if the authenticated user is admin\r\n * @param keycloak Keycloak instance\r\n * @returns {boolean}\r\n */\r\nconst isAdmin = (keycloak) => {\r\n    return keycloak && keycloak.tokenParsed && keycloak.tokenParsed.resource_access[KEYCLOAK_CONFIG.CLIENT_ID].roles.includes(KEYCLOAK_CONFIG.ADMIN);\r\n}\r\n\r\nconst isUser = (keycloak) => {\r\n    return keycloak && keycloak.tokenParsed && keycloak.tokenParsed.resource_access[KEYCLOAK_CONFIG.CLIENT_ID].roles.includes(KEYCLOAK_CONFIG.USER);\r\n}\r\n\r\nconst getUserEmail = () => {\r\n    return keycloak.authenticated && keycloak.tokenParsed && keycloak.tokenParsed.preferred_username\r\n}\r\n\r\nconst handleLogError = (error) => {\r\n\r\n    switch (error) {\r\n        case error.response:\r\n            console.log(\"Error Response: \"+error.response.data);\r\n            break;\r\n        case error.request:\r\n            console.log(\"Error Request: \"+error.request.data);\r\n            break;\r\n        default:\r\n            console.log(\"Error Message: \"+error.message);\r\n    }\r\n}\r\n\r\nexport const helpers = {\r\n    isAdmin,\r\n    isUser,\r\n    handleLogError,\r\n    getUserEmail\r\n}"]},"metadata":{},"sourceType":"module"}