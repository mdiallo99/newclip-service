[{"C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\index.js":"1","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\reportWebVitals.js":"2","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\App.js":"3","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\constants\\Constants.js":"4","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\home\\Home.js":"5","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\user\\UserList.js":"6","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\home\\KitContent.js":"7","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\helpers\\LocalNavbar.js":"8","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\helpers\\AppRequests.js":"9","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\helpers\\PrivateRoute.js":"10","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\user\\Profile.js":"11","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\company\\CompanyList.js":"12","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\company\\AddCompany.js":"13","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\address\\AddressList.js":"14","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\user\\AddUser.js":"15","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\address\\AddAddress.js":"16","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\helpers\\Helpers.js":"17"},{"size":475,"mtime":1627027095931,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1627027095948,"results":"20","hashOfConfig":"19"},{"size":4309,"mtime":1628067999825,"results":"21","hashOfConfig":"19"},{"size":1538,"mtime":1627027095923,"results":"22","hashOfConfig":"19"},{"size":3368,"mtime":1627566301268,"results":"23","hashOfConfig":"19"},{"size":2286,"mtime":1627027095912,"results":"24","hashOfConfig":"19"},{"size":5531,"mtime":1628697107406,"results":"25","hashOfConfig":"19"},{"size":3466,"mtime":1628068076450,"results":"26","hashOfConfig":"19"},{"size":6892,"mtime":1627548983235,"results":"27","hashOfConfig":"19"},{"size":501,"mtime":1627027095853,"results":"28","hashOfConfig":"19"},{"size":3584,"mtime":1627027095901,"results":"29","hashOfConfig":"19"},{"size":2944,"mtime":1627027095816,"results":"30","hashOfConfig":"19"},{"size":13212,"mtime":1627027095808,"results":"31","hashOfConfig":"19"},{"size":3802,"mtime":1627027095800,"results":"32","hashOfConfig":"19"},{"size":12948,"mtime":1627054391943,"results":"33","hashOfConfig":"19"},{"size":8798,"mtime":1627027095791,"results":"34","hashOfConfig":"19"},{"size":1201,"mtime":1627027095835,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q94x2o",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\index.js",[],"C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\reportWebVitals.js",[],"C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\App.js",["78","79","80","81"],"import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Home from \"./components/home/Home\";\r\nimport Profile from \"./components/user/Profile\";\r\nimport Keycloak from \"keycloak-js\";\r\nimport {config} from \"./constants/Constants\";\r\nimport {APP_API} from \"./components/helpers/AppRequests\";\r\nimport {Dimmer, Header, Icon} from \"semantic-ui-react\";\r\nimport {ReactKeycloakProvider} from \"@react-keycloak/web\";\r\nimport LocalNavbar from \"./components/helpers/LocalNavbar\";\r\nimport PrivateRoute from \"./components/helpers/PrivateRoute\";\r\nimport UserList from \"./components/user/UserList\";\r\nimport CompanyList from \"./components/company/CompanyList\";\r\nimport AddressList from \"./components/address/AddressList\";\r\nimport AddAddress from \"./components/address/AddAddress\";\r\nimport AddCompany from \"./components/company/AddCompany\";\r\nimport AddUser from \"./components/user/AddUser\";\r\nimport KitContent from \"./components/home/KitContent\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n/**\r\n * The user token. it's used in several pages\r\n * @type {null}\r\n */\r\nlet userToken = null;\r\n/**\r\n * Keycloak instance. it's used in several pages for user credential management\r\n * @type {null}\r\n */\r\nlet keycloak = null;\r\n\r\nfunction App() {\r\n    /**\r\n     * Keycloak instance\r\n     * @type {Keycloak.KeycloakInstance}\r\n     */\r\n    keycloak = new Keycloak({\r\n        url: `${config.url.KEYCLOAK_BASE_URL}/auth`,\r\n        realm: \"newclip-services\",\r\n        clientId: \"authentication-app\"\r\n    })\r\n    /**\r\n     * Encoding\r\n     * @type {{pkceMethod: string}}\r\n     */\r\n    const initOptions = {pkceMethod: 'S256'}\r\n    const eventLogger = (event, error) => {\r\n        console.log('onKeycloakEvent', event, error)\r\n    }\r\n\r\n    /**\r\n     *  Checks if a user logged or not\r\n     * @param event\r\n     * @returns {Promise<void>}\r\n     */\r\n    const handleOnEvent = async (event) => {\r\n        if (event === 'onAuthSuccess') {\r\n            if (keycloak.authenticated) {\r\n                console.log(\"Token: \", keycloak.token);\r\n                userToken = keycloak.token;\r\n                let response = await APP_API.getUserMe(keycloak.token)\r\n                if (response.status === 404) {\r\n                    response = await APP_API.saveUserMe(keycloak.token)\r\n                    console.log('Profile created !')\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"onError for authentication !\")\r\n        }\r\n    }\r\n\r\n    const loadingComponent = (<Dimmer inverted active={true} page>\r\n            <Header style={{color: '#4d4d4d'}} as='h2' icon inverted>\r\n                <Icon loading name='cog'/>\r\n                <Header.Content> App loading\r\n                    <Header.Subheader style={{color: '#4d4d4d'}}> or running authorization</Header.Subheader>\r\n                </Header.Content>\r\n            </Header>\r\n        </Dimmer>\r\n    )\r\n\r\n    let activeMenu = null;\r\n    const setActiveMenu = (newMenu) => {\r\n        activeMenu = newMenu;\r\n    }\r\n\r\n    return (\r\n        <ReactKeycloakProvider\r\n            authClient={keycloak}\r\n            initOptions={initOptions}\r\n            LoadingComponent={loadingComponent}\r\n            onEvent={(event, error) => handleOnEvent(event, error)}\r\n        >\r\n            <Router>\r\n                <LocalNavbar/>\r\n                <section>\r\n                    <Switch>\r\n                        <PrivateRoute path='/home' component={Home}/>\r\n                        <PrivateRoute path='/kitContent' component={KitContent}/>\r\n                        <PrivateRoute path='/profile' component={Profile}/>\r\n                        <PrivateRoute path='/userList' component={UserList}/>\r\n                        <PrivateRoute path='/companyList' component={CompanyList}/>\r\n                        <PrivateRoute path='/addressList' component={AddressList}/>\r\n                        <PrivateRoute path='/addAddress' component={AddAddress}/>\r\n                        <PrivateRoute path='/addCompany' component={AddCompany}/>\r\n                        <PrivateRoute path='/addUser' component={AddUser}/>\r\n                        <Redirect to=\"/profile\"/>\r\n                    </Switch>\r\n                </section>\r\n                <footer></footer>\r\n            </Router>\r\n        </ReactKeycloakProvider>\r\n    );\r\n}\r\n\r\nexport {App, userToken, keycloak};","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\constants\\Constants.js",["82"],"import React from \"react\";\r\n\r\nconst dev = {\r\n     url: {\r\n            KEYCLOAK_BASE_URL: \"http://localhost:8080\",\r\n            API_BASE_URL: \"http://localhost:8000\"\r\n        }\r\n}\r\n\r\nexport const config = dev;\r\n\r\n/**\r\n * Keycloak config\r\n */\r\nconst REALM = \"newclip-services\";\r\nconst CLIENT_ID = \"authentication-app\";\r\nconst ADMIN = \"ADMIN\";\r\nconst USER = \"USER\";\r\n\r\nexport const KEYCLOAK_CONFIG = {\r\n    REALM,\r\n    CLIENT_ID,\r\n    ADMIN,\r\n    USER\r\n}\r\n\r\n/**\r\n * All endpoints\r\n */\r\nconst USER_LIST_ENDPOINT = \"/api/user/list\";\r\nconst USER_PROFILE_ENDPOINT = \"/api/user/\";\r\nconst ADD_USER_ENDPOINT = \"/api/user/add\";\r\nconst COMPANY_LIST_ENDPOINT= \"/api/company/list\";\r\nconst ADD_COMPANY_ENDPOINT= \"/api/company/add\";\r\nconst ADDRESS_LIST_ENDPOINT= \"/api/address/list\";\r\nconst ADD_ADDRESS_ENDPOINT= \"/api/address/add\";\r\nconst GET_COMPANY_BY_CODE_ENDPOINT = \"/api/company/\";\r\nconst SYLOB_ENDPOINT = \"/api/sylob/data\";\r\nconst SYLOB_DATA_ENDPOINT = \"/api/sylob/result\";\r\nconst ADD_SYLOB_ARTICLE_ENDPOINT = \"/api/sylob/article/add\";\r\nconst SYLOB_KIT_LIST_ENDPOINT = \"/api/sylob/kitList\";\r\nconst FIND_KIT_BY_LABEL_ENDPOINT = \"/api/sylob/kit/\"\r\n\r\n\r\nexport const APP_ENDPOINTS = {\r\n    USER_PROFILE_ENDPOINT,\r\n    USER_LIST_ENDPOINT,\r\n    COMPANY_LIST_ENDPOINT,\r\n    ADD_COMPANY_ENDPOINT,\r\n    ADDRESS_LIST_ENDPOINT,\r\n    ADD_ADDRESS_ENDPOINT,\r\n    GET_COMPANY_BY_CODE_ENDPOINT,\r\n    ADD_USER_ENDPOINT,\r\n    SYLOB_ENDPOINT,\r\n    SYLOB_DATA_ENDPOINT,\r\n    ADD_SYLOB_ARTICLE_ENDPOINT,\r\n    SYLOB_KIT_LIST_ENDPOINT,\r\n    FIND_KIT_BY_LABEL_ENDPOINT\r\n}","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\home\\Home.js",["83"],"import React, {Component} from \"react\";\r\nimport {APP_API} from \"../helpers/AppRequests\";\r\nimport {keycloak, userToken} from \"../../App\";\r\nimport {Table} from \"semantic-ui-react\";\r\nimport {helpers} from \"../helpers/Helpers\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Home extends Component {\r\n\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                kits: []\r\n            }\r\n        }\r\n\r\n        async componentDidMount(){\r\n            const kitsResponse = await APP_API.getKitsListFromSylob(userToken)\r\n            const kitBody = await  kitsResponse.data\r\n            console.log(\"Kits : \"+JSON.stringify(kitBody))\r\n            this.setState({kits: kitBody})\r\n        }\r\n\r\n        render() {\r\n                const { kits } = this.state\r\n\r\n                if(kits.length > 0){\r\n                    return (\r\n                        <div className=\"container-fluid\">\r\n\r\n                            <div className=\"col-12 text-center mb-3 my-sticky\">\r\n                                <h3>LISTE DES KIT DISPONIBLES CHEZ {kits[0].socialReason}</h3>\r\n                            </div>\r\n                            <br/>\r\n                            <Table singleLine>\r\n                                <Table.Header>\r\n                                    {helpers.isAdmin(keycloak) &&\r\n                                    <Table.Row>\r\n                                        <Table.HeaderCell>LIBELLE</Table.HeaderCell>\r\n                                        <Table.HeaderCell> ACTION </Table.HeaderCell>\r\n                                    </Table.Row>\r\n                                    }\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                    {kits.map((el, idx) => {\r\n                                        if(el.articles.length > 0){\r\n                                            return (\r\n                                                <Table.Row key={idx}>\r\n                                                    <Table.Cell>{el.label}</Table.Cell>\r\n                                                    <Table.Cell>\r\n                                                        <div className=\"row gutters\">\r\n                                                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                                                <div className=\"text-right\">\r\n                                                                    <Link to={{pathname:\"/kitContent\",state: {kit:el}}} className=\"btn btn-secondary\">VOIR LE CONTENU</Link>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Table.Cell>\r\n                                                </Table.Row>\r\n                                            );\r\n                                        }\r\n                                    })}\r\n                                </Table.Body>\r\n                            </Table>\r\n                        </div>\r\n                    )\r\n                }else{\r\n                    return \"En chargement\"\r\n                }\r\n\r\n        }\r\n}\r\n\r\nexport default Home;","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\user\\UserList.js",[],"C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\home\\KitContent.js",["84","85","86","87"],"import React, {useState} from \"react\";\r\nimport {APP_API} from \"../helpers/AppRequests\";\r\nimport {userToken} from \"../../App\";\r\nimport {FormControl, InputGroup} from \"react-bootstrap\";\r\n\r\n/**\r\n * displays a specific kit content (articles)\r\n * @param props\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction KitContent(props) {\r\n\r\n    const importImg = (code) => {\r\n\r\n        let img;\r\n        try {\r\n            img = require(\"../../images/\" + code + \".png\").default\r\n        } catch (e) {\r\n            img = require(\"../../images/LOGO.png\").default\r\n        }\r\n        return img\r\n    }\r\n\r\n    const removeElem = (arr, value) => {\r\n\r\n        return arr.filter((ele) => {\r\n            return ele !== value;\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        const response = APP_API.addArticlesInVouchar(values, userToken);\r\n              response.then(res => {\r\n                  console.log(\"submit response: \", res.data)\r\n              }).catch(error => {\r\n                  console.error(error)\r\n              })\r\n    }\r\n\r\n    const {location} = props\r\n    const {articles} = location.state.kit\r\n\r\n    if (articles && articles.length > 0) {\r\n\r\n        let selectedArticles = []\r\n        return (\r\n            <>\r\n                <div className=\"col-12 text-center mb-3 my-sticky\">\r\n                    <h3>LISTE DES ARTICLES DU KIT : {location.state.kit.label}</h3>\r\n                        <button type=\"button\"\r\n                                id=\"finish\"\r\n                                name=\"finish\"\r\n                                onClick={() => {\r\n                                    handleSubmit(JSON.stringify(selectedArticles))\r\n                                    console.log(selectedArticles)\r\n                                }}\r\n                                className=\"btn btn-success btn-lg btn-block\"> Valider\r\n                        </button>\r\n\r\n                </div> <br/>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        {articles.map((article, idx) => (\r\n                            <div className=\"col-12 col-md-6\" key={idx}>\r\n                                <div className=\"card mb-3\">\r\n                                    <div className=\"row g-0\">\r\n                                        <div className=\"col-3\">\r\n                                            <img src={importImg(article.articleCode)}\r\n                                                 className=\"img-fluid\"\r\n                                                 alt=\"User-Profile-Image\"/>\r\n                                        </div>\r\n                                        <div className=\"col-9\">\r\n                                            <div className=\"card-body\">\r\n                                                <strong> {\" \" + article.articleCode} </strong>\r\n                                                {/*<p className=\"card-text\">*/}\r\n                                                {/*     {\" \" + article.name}*/}\r\n                                                {/*</p>*/}\r\n                                                <p className=\"card-text\">NUMERO DE LOT:\r\n                                                    <strong> {\" \" + article.number} </strong>\r\n                                                </p>\r\n                                                <p className=\"card-text\">QUANTITE :\r\n                                                    <strong> {\" \" + article.quantity} </strong>\r\n                                                </p>\r\n                                                <p className=\"card-text\">DATE DE VALIDITE :\r\n                                                    <strong> {\" \" + article.validityDate} </strong>\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"btn-secondary col-sm-2\">\r\n                                                <input type=\"checkbox\"\r\n                                                       id={idx}\r\n                                                       onClick={() => {\r\n                                                                    const cb = document.getElementById(idx);\r\n                                                                    if(cb.checked){\r\n                                                                        selectedArticles.push(article)\r\n                                                                    }else{\r\n                                                                        selectedArticles = removeElem(selectedArticles, article)\r\n                                                                    }\r\n                                                                    console.log(\"checked: \"+cb.checked+ \" \"+idx)\r\n                                                            }\r\n                                                       }\r\n                                                />\r\n                                                <label htmlFor=\"add\">Add</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        return <div>Ce kit est vide !</div>\r\n    }\r\n}\r\n\r\nexport default KitContent","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\helpers\\LocalNavbar.js",["88","89","90"],"import React from \"react\";\r\nimport {useKeycloak} from \"@react-keycloak/web\";\r\nimport {helpers} from \"./Helpers\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport const LocalNavbar = () => {\r\n    const {keycloak} = useKeycloak();\r\n\r\n    const handleLogInOut = () => {\r\n        if(keycloak.authenticated){\r\n           keycloak.logout()\r\n        }else{\r\n            console.log(\"in login  \")\r\n            keycloak.login()\r\n        }\r\n    }\r\n\r\n    const  checkAuthenticated = () => {\r\n        if(!keycloak.authenticated){\r\n            handleLogInOut()\r\n        }\r\n    }\r\n\r\n    const getUsername = () => {\r\n        return keycloak.authenticated && keycloak.tokenParsed && keycloak.tokenParsed.preferred_username\r\n    }\r\n\r\n    const getLogInOutText = () => {\r\n        return keycloak.authenticated ? \"LogOut\": \"Login\"\r\n    }\r\n\r\n    const getAdminMenuStyle = () => {\r\n        return keycloak.authenticated && helpers.isAdmin(keycloak) ? {\"display\": \"block\"} : {\"display\": \"none\"}\r\n    }\r\n\r\n\r\n    return (\r\n                    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                                {\r\n                                    keycloak.authenticated &&\r\n                                    <Nav.Link href=\"#home\" as={NavLink} exact to='/home'>Home</Nav.Link>\r\n                                }\r\n                                {\r\n                                    keycloak.authenticated &&\r\n                                    <Nav.Link href=\"#profile\" as={NavLink} exact to='/profile'>Profile</Nav.Link>\r\n                                }\r\n                                {helpers.isAdmin(keycloak) &&\r\n                                <Nav.Link href=\"#userList\" as={NavLink} exact to='/userList'>User List</Nav.Link>\r\n                                }\r\n                                {helpers.isAdmin(keycloak) &&\r\n                                <Nav.Link href=\"#companyList\" as={NavLink} exact to='/companyList'>Company\r\n                                    List</Nav.Link>\r\n                                }\r\n                                {helpers.isAdmin(keycloak) &&\r\n                                <Nav.Link href=\"#addressList\" as={NavLink} exact to='/addressList'>Address\r\n                                    List</Nav.Link>\r\n                                }\r\n                                {helpers.isAdmin(keycloak) &&\r\n                                <Nav.Link href=\"#addAddress\" as={NavLink} exact to='/addAddress'>Add Address</Nav.Link>\r\n                                }\r\n                                {helpers.isAdmin(keycloak) &&\r\n                                <Nav.Link href=\"#addCompany\" as={NavLink} exact to='/addCompany'>Add Company</Nav.Link>\r\n                                }\r\n                                {helpers.isAdmin(keycloak) &&\r\n                                <Nav.Link href=\"#addUser\" as={NavLink} exact to='/addUser'>Add User</Nav.Link>\r\n                                }\r\n                                <NavLink as={NavLink} exact to=\"/login\" className=\"btn btn-danger\" onClick={handleLogInOut}>{getLogInOutText()}</NavLink>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n    )\r\n}\r\n\r\nexport default LocalNavbar","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\helpers\\AppRequests.js",["91"],"import instance from \"axios\";\r\nimport {APP_ENDPOINTS} from \"../../constants/Constants\";\r\nimport {helpers} from \"./Helpers\";\r\nimport {userToken} from \"../../App\";\r\n\r\n/**\r\n * Manages the Bearer token for authentication\r\n * @param token\r\n * @returns {`Bearer ${string}`}\r\n */\r\nconst bearerAuth = (token) => {\r\n    return `Bearer ${token}`\r\n}\r\n\r\n/**\r\n * Gets a user by his token\r\n * @param token user token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst getUserMe = (token) => {\r\n    return instance.get(APP_ENDPOINTS.USER_PROFILE_ENDPOINT, {\r\n        headers: {'Authorization': bearerAuth(token)}\r\n    })\r\n}\r\n\r\n/**\r\n * Load the user profile\r\n * @param token\r\n * @param user\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst saveUserMe = (token, user) => {\r\n\r\n    return instance.post(APP_ENDPOINTS.USER_PROFILE_ENDPOINT +'me', user, {\r\n        headers: {'Authorization': bearerAuth(token)}\r\n    })\r\n}\r\n\r\n/**\r\n * Make a reauest for getting the list of users\r\n * @param token user token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst getUserList = (token) => {\r\n    return instance.get(APP_ENDPOINTS.USER_LIST_ENDPOINT, {\r\n        headers: {'Authorization': bearerAuth(token)}\r\n    })\r\n}\r\n\r\n/**\r\n * Adds a new User\r\n * @param user json object\r\n * @param token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst addUser = (user, token) => {\r\n    return instance.post(APP_ENDPOINTS.ADD_USER_ENDPOINT, user, {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': bearerAuth(token)\r\n            }\r\n    })\r\n}\r\n\r\n/**\r\n * Gets user by email request\r\n * @param email\r\n * @param token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst getUserByEmail = (email, token) => {\r\n    return instance.get(APP_ENDPOINTS.USER_PROFILE_ENDPOINT+email, {\r\n        headers: {'Authorization': bearerAuth(token)}\r\n    })\r\n}\r\n\r\n/**\r\n * Request for getting available articles in the User Company\r\n * @param token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst getSylobData = async (token) => {\r\n    const request =  await APP_API.getUserByEmail(helpers.getUserEmail(), userToken)\r\n    const companyCode = await request.data.company.code;\r\n\r\n    return instance.get(APP_ENDPOINTS.SYLOB_ENDPOINT, {\r\n        headers: {\r\n                 'Access-Control-Allow-Origin':\"*\",\r\n                 'Authorization': bearerAuth(token)\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * Returns the list of Companies\r\n * @param token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst getCompanyList = (token) => {\r\n    return instance.get(APP_ENDPOINTS.COMPANY_LIST_ENDPOINT, {\r\n        headers: {'Authorization': bearerAuth(token)}\r\n    })\r\n}\r\n\r\n/**\r\n * Adds new company\r\n * @param company\r\n * @param token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst saveCompany = (company, token) => {\r\n    return instance.post(APP_ENDPOINTS.ADD_COMPANY_ENDPOINT, company, {\r\n        headers: {'Content-type': 'application/json',\r\n                  'Authorization': bearerAuth(token)}\r\n                }\r\n                )\r\n}\r\n\r\n/***\r\n * Gets a specific company by its code\r\n * @param companyCode\r\n * @param token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst getCompanyByCode = (companyCode, token) => {\r\n    return instance.get(APP_ENDPOINTS.GET_COMPANY_BY_CODE_ENDPOINT+companyCode, {\r\n        headers: {'Authorization': bearerAuth(token)}\r\n    })\r\n}\r\n\r\n/**\r\n * Gets the list of addresses\r\n * @param token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst getAddressList = (token) => {\r\n    return instance.get(APP_ENDPOINTS.ADDRESS_LIST_ENDPOINT, {\r\n        headers: {'Authorization': bearerAuth(token)}\r\n    })\r\n}\r\n\r\n/**\r\n * Adds the Address\r\n * @param address\r\n * @param token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst saveAddress = (address, token) => {\r\n    return instance.post(\r\n        APP_ENDPOINTS.ADD_ADDRESS_ENDPOINT, address, {\r\n            headers: { 'Content-type': 'application/json',\r\n                        'Authorization': bearerAuth(token),\r\n                     }\r\n        }\r\n    )\r\n}\r\n\r\n/**\r\n * Load the list of articles\r\n * @param token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst loadArticleList = (token) => {\r\n    return instance.get(APP_ENDPOINTS.SYLOB_DATA_ENDPOINT, {\r\n        headers: {'Authorization': bearerAuth(token)}\r\n    })\r\n}\r\n\r\n/**\r\n * Create a new Article from Sylob\r\n * @param sylobObject\r\n * @param token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst addArticlesInVouchar = (articles, token) => {\r\n    return instance.post(APP_ENDPOINTS.ADD_SYLOB_ARTICLE_ENDPOINT, articles, {\r\n            headers: { 'Content-type': 'application/json',\r\n            'Authorization': bearerAuth(token),\r\n            }\r\n         }\r\n         )\r\n}\r\n\r\n/**\r\n * Gets available kits in the User's Company\r\n * @param token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst getKitsListFromSylob = async (token) => {\r\n    // const request =  await APP_API.getUserByEmail(helpers.getUserEmail(), userToken)\r\n    // const companyCode = await request.data.company.code;\r\n\r\n    return instance.get(APP_ENDPOINTS.SYLOB_KIT_LIST_ENDPOINT, {\r\n        headers: {\r\n            'Access-Control-Allow-Origin': \"*\",\r\n            'Authorization': bearerAuth(token)\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * Gets a specific Kit by its label (label is a key in Sylob)\r\n * @param label\r\n * @param token\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nconst getKitByLabel = (label, token) => {\r\n\r\n    return instance.get(APP_ENDPOINTS.FIND_KIT_BY_LABEL_ENDPOINT+label, {\r\n        headers: {'Authorization': bearerAuth(token)}\r\n    })\r\n}\r\n\r\n/**\r\n * Exportation\r\n * @type {{getCompanyList: (function(*=): Promise<AxiosResponse<*>>), getKitByLabel: (function(*, *=): Promise<AxiosResponse<*>>), getSylobData: (function(*=): Promise<AxiosResponse<any>>), getAddressList: (function(*=): Promise<AxiosResponse<*>>), addUser: (function(*=, *=): Promise<AxiosResponse<*>>), getKitsListFromSylob: (function(*=): Promise<AxiosResponse<any>>), getUserList: (function(*=): Promise<AxiosResponse<*>>), getUserByEmail: (function(*, *=): Promise<AxiosResponse<*>>), saveCompany: (function(*=, *=): Promise<AxiosResponse<*>>), saveAddress: (function(*=, *=): Promise<AxiosResponse<*>>), addArticlesInVouchar: (function(*=, *=): Promise<AxiosResponse<*>>), getCompanyByCode: (function(*, *=): Promise<AxiosResponse<*>>), getUserMe: (function(*=): Promise<AxiosResponse<*>>), saveUserMe: (function(*=, *=): Promise<AxiosResponse<*>>), loadArticleList: (function(*=): Promise<AxiosResponse<*>>)}}\r\n */\r\nexport const APP_API = {\r\n    getUserMe,\r\n    saveUserMe,\r\n    getUserList,\r\n    getCompanyList,\r\n    getAddressList,\r\n    saveAddress,\r\n    saveCompany,\r\n    getCompanyByCode,\r\n    addUser,\r\n    getUserByEmail,\r\n    getSylobData,\r\n    loadArticleList,\r\n    addArticlesInVouchar,\r\n    getKitsListFromSylob,\r\n    getKitByLabel\r\n}","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\helpers\\PrivateRoute.js",[],"C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\user\\Profile.js",["92"],"import React, {Component} from \"react\";\r\nimport {APP_API} from \"../helpers/AppRequests\";\r\nimport {helpers} from \"../helpers/Helpers\";\r\nimport {userToken} from \"../../App\";\r\n\r\n/**\r\n * Displays a User profile\r\n */\r\nclass Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        /**\r\n         * Request for getting the logged User\r\n         * @type {AxiosResponse<any>}\r\n         */\r\n        const request = await APP_API.getUserByEmail(helpers.getUserEmail(), userToken)\r\n        this.setState(request.data)\r\n    }\r\n\r\n    render() {\r\n        if (this.state === null) {\r\n            return \"loading\"\r\n        } else {\r\n            const {firstName, lastName, email, roles, company} = this.state;\r\n            return (\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row d-flex justify-content-center\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h3>Profile</h3>\r\n                        </div>\r\n                        <div className=\"col-xl-6 col-md-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-4 d-flex align-items-center justify-content-center\">\r\n                                        <img\r\n                                            src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\r\n                                            className=\"rounded-circle\"\r\n                                            alt=\"User-Profile-Image\"/>\r\n                                    </div>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-8\">\r\n                                                <p className=\"m-b-10 f-w-600\">Full Name :\r\n                                                    <strong> {\" \" + firstName + \" \" + lastName} </strong>\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <p className=\"m-b-10 f-w-600\">Email :\r\n                                                    <strong> {\" \" + email} </strong>\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <p className=\"m-b-10 f-w-600\">Roles :\r\n                                                    <strong> {\" \" + roles} </strong>\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <p className=\"m-b-10 f-w-600\">Company :\r\n                                                    <strong> {\" \" + company.socialReason} </strong>\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Profile;","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\company\\CompanyList.js",[],"C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\company\\AddCompany.js",[],"C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\address\\AddressList.js",[],"C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\user\\AddUser.js",["93"],"import React, {useEffect, useState} from \"react\";\r\nimport {APP_API} from \"../helpers/AppRequests\";\r\nimport {userToken} from \"../../App\";\r\n\r\n\r\nconst AddUser = () =>  {\r\n\r\n    /**\r\n     * Initial state, where all fields are empty\r\n     * @type {{companyCode: string, firstName: string, lastName: string, password: string, companies: *[], roles: string, email: string}}\r\n     */\r\n    const initState = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email:'',\r\n        password: '',\r\n        roles: '',\r\n        companyCode: '',\r\n        companies: []\r\n    }\r\n   const [attributes, setAttributes] = useState(initState)\r\n\r\n    useEffect(async ()=> {\r\n        const  response = await APP_API.getCompanyList(userToken);\r\n        attributes.companies = await response.data;\r\n        console.log(\"Companies: \"+response.data)\r\n    })\r\n\r\n    /**\r\n     * this function cleans form content\r\n     */\r\n    const handleReset = () => {\r\n        setAttributes(initState);\r\n    }\r\n\r\n    /**\r\n     * signs each field content to its attribute\r\n     * @param event content entry\r\n     */\r\n    const changeHandler = (event) => {\r\n        setAttributes({...attributes, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        console.log(\"Code: \"+attributes.companyCode)\r\n        const requestCompany = APP_API.getCompanyByCode(attributes.companyCode, userToken);\r\n        requestCompany.then( res => {\r\n            /**\r\n             * represents a json object for Company creation in Backend\r\n             * @type {{zipCode: (string|string|*), code, clientType: (string|string|*), city: (string|string|string|*), countryCode: (string|string|*), recipient: (string|string|string|*), label, countryName: (string|string|*), socialReason: (string|string|*)}}\r\n             */\r\n                const jsonCompany = {\r\n                    \"code\": res.data.code,\r\n                    \"socialReason\": res.data.socialReason,\r\n                    \"clientType\": res.data.clientType,\r\n                    \"label\": res.data.label,\r\n                    \"countryCode\": res.data.countryCode,\r\n                    \"countryName\": res.data.countryName,\r\n                    \"zipCode\": res.data.zipCode,\r\n                    \"city\": res.data.city,\r\n                    \"recipient\": res.data.recipient\r\n                }\r\n\r\n            /**\r\n             * represents a json object for User creation in Backend\r\n             * @type {{firstName: string, lastName: string, password: string, roles: string, company: {zipCode: (string|*), code, clientType: (string|*), city: (string|*), countryCode: (string|*), recipient: (string|*), label, countryName: (string|*), socialReason: (string|*)}, email: string}}\r\n             */\r\n                const jsonUser = {\r\n                    \"firstName\": attributes.firstName,\r\n                    \"lastName\": attributes.lastName,\r\n                    \"email\": attributes.email,\r\n                    \"password\": attributes.password,\r\n                    \"roles\": attributes.roles,\r\n                    \"company\": jsonCompany\r\n                }\r\n                console.log(\"jsonUser: \", jsonUser)\r\n                console.log(\"Company: \", jsonCompany)\r\n            /**\r\n             * the request for adding a new User\r\n             * @type {Promise<AxiosResponse<any>>}\r\n             */\r\n                const addUserRequest = APP_API.addUser(jsonUser, userToken);\r\n                addUserRequest.then(res => {\r\n                    console.log(\"add user response :\"+res.data)\r\n                    handleReset()\r\n                }).catch(error => {\r\n                    console.log(\"add user error :\", error)\r\n                })\r\n\r\n                console.log(\"jsonCompany: \", jsonCompany)\r\n            }\r\n        ).catch(error => {\r\n            console.log(\"Error : \"+error)\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n            <>\r\n                <form onSubmit={(e) => handleSubmit(e)}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row gutters\">\r\n                            <div className=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"card h-100\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row gutters\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <h3>Add a new user</h3>\r\n                                            </div>\r\n                                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"firstName\">First name</label>\r\n                                                    <input type=\"text\"\r\n                                                           className=\"form-control\"\r\n                                                           id=\"firstName\"\r\n                                                           name=\"firstName\"\r\n                                                           value={attributes.firstName}\r\n                                                           placeholder=\"Ex: Dupont\"\r\n                                                           required={\"required\"}\r\n                                                           onChange={(e) => changeHandler(e) }/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"lastName\">Last name</label>\r\n                                                    <input type=\"text\"\r\n                                                           className=\"form-control\"\r\n                                                           id=\"lastName\"\r\n                                                           name=\"lastName\"\r\n                                                           value={attributes.lastName}\r\n                                                           placeholder=\"Ex: Hugo\"\r\n                                                           required={\"required\"}\r\n                                                           onChange={(e) => changeHandler(e) } />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row gutters\">\r\n                                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"email\">Email</label>\r\n                                                    <input type=\"email\"\r\n                                                           className=\"form-control\"\r\n                                                           id=\"email\"\r\n                                                           name=\"email\"\r\n                                                           value={attributes.email}\r\n                                                           placeholder=\"Ex: hugo@exmaple.com\"\r\n                                                           required={\"required\"}\r\n                                                           onChange={(e) => changeHandler(e) }\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"password\">Password</label>\r\n                                                    <input type=\"password\"\r\n                                                           className=\"form-control\"\r\n                                                           id=\"password\"\r\n                                                           name=\"password\"\r\n                                                           value={attributes.password}\r\n                                                           placeholder=\"Ex: myPassword\"\r\n                                                           required={\"required\"}\r\n                                                           onChange={(e) => changeHandler(e) }\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div>\r\n                                                        <label htmlFor=\"roles\">Role </label>\r\n                                                        <select className=\"browser-default custom-select form-control\"\r\n                                                                name=\"roles\"\r\n                                                                value={attributes.roles}\r\n                                                                onChange={(e) => changeHandler(e)}\r\n                                                                required={\"required\"}>\r\n                                                           <option>--Please Select--</option>\r\n                                                            <option value=\"USER\">USER</option>\r\n                                                            <option value=\"ADMIN\">ADMIN</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div>\r\n                                                        <label htmlFor=\"company\">Company</label>\r\n                                                        <input className=\"form-control\"\r\n                                                                name=\"companyCode\"\r\n                                                                value={attributes.companyCode}\r\n                                                                onChange={(e) => changeHandler(e)}\r\n                                                                required={\"required\"}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row gutters\">\r\n                                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                                    <div className=\"text-right\">\r\n                                                        <button type=\"submit\"\r\n                                                                id=\"submit\"\r\n                                                                name=\"submit\"\r\n                                                                className=\"btn btn-primary\">Submit\r\n                                                        </button>\r\n                                                        <button type=\"button\"\r\n                                                                id=\"clear\"\r\n                                                                name=\"clear\"\r\n                                                                onClick={() => handleReset()}\r\n                                                                className=\"btn btn-warning\">Reset\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default AddUser","C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\address\\AddAddress.js",[],"C:\\Users\\mdiallo\\Desktop\\newclip-service\\webapp\\src\\components\\helpers\\Helpers.js",[],{"ruleId":"94","severity":1,"message":"95","line":1,"column":34,"nodeType":"96","messageId":"97","endLine":1,"endColumn":39},{"ruleId":"94","severity":1,"message":"98","line":46,"column":11,"nodeType":"96","messageId":"97","endLine":46,"endColumn":22},{"ruleId":"94","severity":1,"message":"99","line":81,"column":9,"nodeType":"96","messageId":"97","endLine":81,"endColumn":19},{"ruleId":"94","severity":1,"message":"100","line":82,"column":11,"nodeType":"96","messageId":"97","endLine":82,"endColumn":24},{"ruleId":"94","severity":1,"message":"101","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":48,"column":57,"nodeType":"104","messageId":"105","endLine":48,"endColumn":59},{"ruleId":"94","severity":1,"message":"106","line":1,"column":16,"nodeType":"96","messageId":"97","endLine":1,"endColumn":24},{"ruleId":"94","severity":1,"message":"107","line":4,"column":9,"nodeType":"96","messageId":"97","endLine":4,"endColumn":20},{"ruleId":"94","severity":1,"message":"108","line":4,"column":22,"nodeType":"96","messageId":"97","endLine":4,"endColumn":32},{"ruleId":"109","severity":1,"message":"110","line":69,"column":45,"nodeType":"111","endLine":71,"endColumn":76},{"ruleId":"94","severity":1,"message":"112","line":20,"column":12,"nodeType":"96","messageId":"97","endLine":20,"endColumn":30},{"ruleId":"94","severity":1,"message":"113","line":26,"column":11,"nodeType":"96","messageId":"97","endLine":26,"endColumn":22},{"ruleId":"94","severity":1,"message":"114","line":34,"column":11,"nodeType":"96","messageId":"97","endLine":34,"endColumn":28},{"ruleId":"94","severity":1,"message":"115","line":84,"column":11,"nodeType":"96","messageId":"97","endLine":84,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":40,"column":41,"nodeType":"111","endLine":43,"endColumn":71},{"ruleId":"116","severity":1,"message":"117","line":23,"column":15,"nodeType":"104","endLine":27,"endColumn":6},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'eventLogger' is assigned a value but never used.","'activeMenu' is assigned a value but never used.","'setActiveMenu' is assigned a value but never used.","'React' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","'FormControl' is defined but never used.","'InputGroup' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'checkAuthenticated' is assigned a value but never used.","'getUsername' is assigned a value but never used.","'getAdminMenuStyle' is assigned a value but never used.","'companyCode' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching"]